package app;

import static app.RegistroDepreceated.con;
import static app.RegistroDepreceated.getConection;
import com.mysql.jdbc.Connection;
import java.awt.HeadlessException;
import java.awt.TextField;
import java.io.File;
import java.awt.Image;
import java.awt.KeyboardFocusManager;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import static java.lang.System.in;
import java.sql.Blob;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Asistencia extends javax.swing.JFrame {

    public static final String URL = "jdbc:mysql://localhost:3306/Teocalli";
    public static final String Username = "root";
    public static final String Password = "";
    static Connection con = null;
    static String path;
    int bandera = 0;
    PreparedStatement ps;
    ResultSet rs;

    public static Connection getConection() {
        con = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection(URL, Username, Password);
            //JOptionPane.showMessageDialog(null, "ConexiÃ³n exitosa");
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }

        return con;
    }

    private void limpiarCajas() {
        txtClaveRegistro.setText(null);

    }

    public Asistencia() {
        initComponents();
        getConection();
    
        
        KeyboardFocusManager keyboardFocusManager = KeyboardFocusManager.getCurrentKeyboardFocusManager();
        keyboardFocusManager.addKeyEventDispatcher(e -> {
            KeyEvent kev = (KeyEvent) e;
            if (kev.getKeyCode() == KeyEvent.VK_ENTER) {
                // StatusDisplayer.getDefault().setStatusText("you pressed ctrl-tab");
            
             if(bandera == 0){
                    ///JOptionPane.showMessageDialog(this, "holi");
                String where = "";
                if (!"".equals(txtClaveRegistro.getText().toString())) {
                    where = "WHERE clave= '" + txtClaveRegistro.getText().toString() + "'";

                }
                PreparedStatement ps = null;
                ResultSet rs = null;

                String sql = "SELECT image, nombre, nivel FROM  bailarin " + where;
                System.out.println(sql);
                try {
                    ps = con.prepareStatement(sql);
                    rs = ps.executeQuery();

                    rs.next();
                    AsistenciaDetalles ao = new AsistenciaDetalles();

                    Blob imageBlob = rs.getBlob(1);
                    InputStream binaryStream = imageBlob.getBinaryStream(1, imageBlob.length());
                    BufferedImage image = ImageIO.read(binaryStream);
                    Image dimg = image.getScaledInstance(AsistenciaDetalles.imageLabel.getWidth(), AsistenciaDetalles.imageLabel.getHeight(), Image.SCALE_SMOOTH);

                    AsistenciaDetalles.imageLabel.setIcon(new ImageIcon(dimg));
                    AsistenciaDetalles.txtClaveAD.setText(txtClaveRegistro.getText().toString());
                    AsistenciaDetalles.txtNombreA.setText(rs.getString("nombre"));
                    AsistenciaDetalles.txtNivelA.setText(rs.getString("nivel"));

                    ao.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
                }

                dispose();
             }
             bandera ++;
            }
            return false;
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        txtClaveRegistro = new javax.swing.JTextField();
        btnRegistro = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));
        jPanel1.setMinimumSize(new java.awt.Dimension(912, 180));

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home_48px_1.png"))); // NOI18N
        jLabel15.setText("Registro de Asistencias");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(44, 62, 80));
        jPanel5.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanel5.setMinimumSize(new java.awt.Dimension(912, 180));
        jPanel5.setPreferredSize(new java.awt.Dimension(912, 180));

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        txtClaveRegistro.setBackground(new java.awt.Color(36, 47, 65));
        txtClaveRegistro.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtClaveRegistro.setForeground(new java.awt.Color(255, 255, 255));
        txtClaveRegistro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtClaveRegistro.setText("Ingrese su clave");
        txtClaveRegistro.setBorder(null);
        txtClaveRegistro.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtClaveRegistro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtClaveRegistroFocusGained(evt);
            }
        });
        txtClaveRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtClaveRegistroMouseClicked(evt);
            }
        });

        btnRegistro.setBackground(new java.awt.Color(26, 188, 156));
        btnRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegistro.setForeground(new java.awt.Color(44, 62, 80));
        btnRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnRegistroMousePressed(evt);
            }
        });
        btnRegistro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRegistroKeyPressed(evt);
            }
        });
        btnRegistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("EMAIL");
        btnRegistro.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, -1, -1));

        jLabel12.setBackground(new java.awt.Color(44, 62, 80));
        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(44, 62, 80));
        jLabel12.setText("Registrar ");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        btnRegistro.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 204, 204));
        jLabel17.setText("Clave");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jLabel17))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(txtClaveRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(670, 670, 670)
                        .addComponent(btnRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel17)
                .addGap(13, 13, 13)
                .addComponent(txtClaveRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190)
                .addComponent(btnRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 953, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMouseClicked
        // TODO add your handling code here:
        //  dispose();
        String where = "";
        if (!"".equals(txtClaveRegistro.getText().toString())) {
            where = "WHERE clave= '" + txtClaveRegistro.getText().toString() + "'";

        }
        PreparedStatement ps = null;
        ResultSet rs = null;

        String sql = "SELECT image, nombre, nivel FROM  bailarin " + where;
        System.out.println(sql);
        try {
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            rs.next();
            AsistenciaDetalles ao = new AsistenciaDetalles();

            Blob imageBlob = rs.getBlob(1);
            InputStream binaryStream = imageBlob.getBinaryStream(1, imageBlob.length());
            BufferedImage image = ImageIO.read(binaryStream);
            Image dimg = image.getScaledInstance(AsistenciaDetalles.imageLabel.getWidth(), AsistenciaDetalles.imageLabel.getHeight(), Image.SCALE_SMOOTH);

            AsistenciaDetalles.imageLabel.setIcon(new ImageIcon(dimg));
            AsistenciaDetalles.txtClaveAD.setText(txtClaveRegistro.getText().toString());
            AsistenciaDetalles.txtNombreA.setText(rs.getString("nombre"));
            AsistenciaDetalles.txtNivelA.setText(rs.getString("nivel"));

            ao.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
        }

        // new AsistenciaDetalles().setVisible(true);
        dispose();


    }//GEN-LAST:event_btnRegistroMouseClicked

    private void btnRegistroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMousePressed
        // TODO add your handling code here:
/*
        try {
            ps = con.prepareStatement("INSERT INTO bailarin (image, clave, nombre, direc, tel, edad, genero,fech_nac, nivel) VALUES (?,?,?,?,?,?,?,?,?)");

            FileInputStream fis = null;
            File file = new File(path);

            try {
                fis = new FileInputStream(file);
                ps.setBinaryStream(1, fis, (int) file.length());

            } catch (FileNotFoundException ex) {

                Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
            }

            // ps.set ps
            ps.setString(2, String.valueOf(txtClaveRegistro.getText()));

          

           // ps.setDate(8, (datepFechaRegistro.getDate() == null ? null : new java.sql.Date(datepFechaRegistro.getDate().getTime())));

          

            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(this, "BailarÃ­n Registrado");
                limpiarCajas();
            } else {
                JOptionPane.showMessageDialog(this, "Error al registrar al bailarÃ­n");
                limpiarCajas();
            }

            con.close();
            fis.close();

        } catch (SQLException ex) {
            Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
        }
         */


    }//GEN-LAST:event_btnRegistroMousePressed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        //  dispose();
        String where = "";
        if (!"".equals(txtClaveRegistro.getText().toString())) {
            where = "WHERE clave= '" + txtClaveRegistro.getText().toString() + "'";

        }
        PreparedStatement ps = null;
        ResultSet rs = null;

        String sql = "SELECT image, nombre, nivel FROM  bailarin " + where;
        System.out.println(sql);
        try {
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            rs.next();
            AsistenciaDetalles ao = new AsistenciaDetalles();

            Blob imageBlob = rs.getBlob(1);
            InputStream binaryStream = imageBlob.getBinaryStream(1, imageBlob.length());
            BufferedImage image = ImageIO.read(binaryStream);
            Image dimg = image.getScaledInstance(AsistenciaDetalles.imageLabel.getWidth(), AsistenciaDetalles.imageLabel.getHeight(), Image.SCALE_SMOOTH);

            AsistenciaDetalles.imageLabel.setIcon(new ImageIcon(dimg));
            AsistenciaDetalles.txtClaveAD.setText(txtClaveRegistro.getText().toString());
            AsistenciaDetalles.txtNombreA.setText(rs.getString("nombre"));
            AsistenciaDetalles.txtNivelA.setText(rs.getString("nivel"));

            ao.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Asistencia.class.getName()).log(Level.SEVERE, null, ex);
        }

        // new AsistenciaDetalles().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel12MouseClicked

    private void txtClaveRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtClaveRegistroMouseClicked
        // TODO add your handling code here:
        txtClaveRegistro.setText("");
    }//GEN-LAST:event_txtClaveRegistroMouseClicked

    private void txtClaveRegistroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClaveRegistroFocusGained
        txtClaveRegistro.setText("");
    }//GEN-LAST:event_txtClaveRegistroFocusGained

    private void btnRegistroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRegistroKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegistroKeyPressed

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        new Home().setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroDepreceated.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroDepreceated.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroDepreceated.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroDepreceated.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new Asistencia().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnRegistro;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator4;
    public static javax.swing.JTextField txtClaveRegistro;
    // End of variables declaration//GEN-END:variables

}
